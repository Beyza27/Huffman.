import java.util.PriorityQueue;
import java.util.Comparator;

class HuffmanDugumu {
  int eleman;
  char k;
  HuffmanDugumu left;
  HuffmanDugumu right;
}

// dugumleri karsilastirmak icin;
class ImplementComparator implements Comparator<HuffmanDugumu> {
  public int compare(HuffmanDugumu x, HuffmanDugumu y) {
    return x.eleman - y.eleman;
  }
}

// huffman algoritmasi
class Huffman {
  public static void printCode(HuffmanDugumu root, String s) {
    if (root.left == null && root.right == null && Character.isLetter(root.k)) {

      System.out.println(root.k + "   |  " + s);

      return;
    }
    printCode(root.left, s + "0");
    printCode(root.right, s + "1");
  }

  public static void main(String[] args) {

    int n = 4;
    char[] charArray = { 'A', 'B', 'C', 'D' };
    int[] charfreq = { 8, 6, 3, 4 };

    PriorityQueue<HuffmanDugumu> q = new PriorityQueue<HuffmanDugumu>(n, new ImplementComparator());

    for (int i = 0; i < n; i++) {
      HuffmanDugumu hd = new HuffmanDugumu();

      hd.k = charArray[i];
      hd.eleman = charfreq[i];

      hd.left = null;
      hd.right = null;

      q.add(hd);
    }

    HuffmanDugumu root = null;

    while (q.size() > 1) {

      HuffmanDugumu x = q.peek();
      q.poll();

      HuffmanDugumu y = q.peek();
      q.poll();

      HuffmanDugumu hdg = new HuffmanDugumu();

      hdg.eleman = x.eleman + y.eleman;
      hdg.k = '-';
      hdg.left = x;
      hdg.right = y;
      root = hdg;

      q.add(hdg);
    }
    System.out.println(" Verilen karakter | Huffman kodu ");
    System.out.println("--------------------");
    printCode(root, "");
  }
}
